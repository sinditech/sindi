# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path
name: Publish to Maven Central

on:
  release:
    types: [created] # Trigger on a new GitHub Release
  workflow_dispatch:
  
jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed for creating a release if you automate that part
      packages: write # Needed if you also push to GitHub Packages

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java and Maven
        uses: actions/setup-java@v4
        with:
          java-version: '17' # Or your desired Java version
          distribution: 'temurin'
          cache: 'maven'
          # Important: This configures settings.xml for you
          # It looks for the server ID 'central' by default
          # and uses MAVEN_USERNAME/MAVEN_PASSWORD environment variables
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Install GPG secret key
        run: |
          cat <(echo -e "${{ secrets.MAVEN_GPG_PRIVATE_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG
        env:
          MAVEN_GPG_PRIVATE_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}

      - name: Deploy to Maven Central
        run: mvn --batch-mode deploy -P sindi-release -DskipTests -DskipITs -Dspotless.check.skip=true -e # -P release if you use a profile for release builds
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }} # Passed to the GPG plugin